<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYI
        BQdOGCgdNREcHAAAAAkAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABg0LB2Uh
        MR6nJkVLzCVRiOAjWcLaIVm4vx9TfI0cQUM5Eh8bAAIACAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEQEBAKaSgxI6Mu
        QVLBLUiQ0ilMy9wkT/HVIU7/xx1M/80dUf/IG1H90R1Y6s0dWb60HVOBhxtDRzoRIR8AAgALAAAABAAA
        AAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAABQAAAAcdExMNp0BHTLQz
        PpnBLT/RyChA9MkkQf/JIUL/yiBF/6cfPv+NGTb/ohtA/4kXNv+pGkX/yxdT/8oWVP7GGFfsvBlWwaYX
        Tod5ETpPMAcXJQAAAAsAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAcAAAAQAAAAGa1E
        RmDxWWDmzDlE/7EjMf+yIjX/siE3/7IfOf+wHjz/ixoy/4wbNf+dGjz/lBk5/4YVM/+tFUX/shNJ/7IS
        Sv+zEUz/tBFP/rYSUu/HFl24VwkqPAAAAA4AAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAEAAAADwAA
        ACF8MS5g7lZV3/9laP/yZW3/tDM+/5wfLP+dHi//nR0x/50cM/+VHjb/hh41/4EbM/+DHDX/kRs6/5wU
        Pv+dEj//nRFB/50QQv+cD0P/wRVX//MXcf69E1mlCwIGKwAAAAwAAAADAAAAAAAAAAAAAAAAAAAAAQAA
        AAcAAAAWYSgjU+NQSNb/Xlr//2ts//97f//qbXX/oCw2/4sbJ/+MGir/jBkr/40YLv+NGDH/jBgz/40X
        Nf+NFDX/jBE1/4wRN/+MDzj/iw45/6AVRv/kHGv/7xdw/+gWb/OOEEV2AAAAFwAAAAQAAAAAAAAAAAAA
        AAAAAAABAAAAB18pITTeTT7D/1hL//9lXv//c3D//4GC//+Nkf/fbXX/mys2/5IjMP+TIjL/kyA0/5Mf
        Nf+THTf/kxw5/5MbOv+TGjz/kxk9/5MYPv+WGEL/zCNi/+kabv/nF27/5xZw/9YWaddhDTBCAAAABwAA
        AAAAAAAAAAAAAP///wBrNSoY4E43p/5UPv74YE//+G5f//97df//h4b//5GT//6Nkv/yUFz/7j5P/+48
        U//uO1X/7jhY/+42W//uNF7/7jNg/+4xY//uL2X/7ixn//Avbf/oKnH/3hpq/94ZbP/eF27/3xdx/8MX
        Y6UpCBQZAAAAAAAAAACdUC0Ad0sqCuNTL4r9UjL6/VtC/9pfQ//gYz7/+4B0//+Nif//lZX//3+D//9F
        T///Pk3//zxR//86VP//N1f//zVa//8zXf//MWD//y9j//8tZf//K2j//yts/+8xdP/VHGn/1Rpr/9Ma
        bv+uHGP/zRpu9K0WWGkAAAAGFQULAGFsbAPmYSNt/Fci9P9VM//zX0P/3GNJ/+JqU//peWX//5ON//+W
        k///bG3//0lP//9IUv//RlX//0NY//9BW///P17//z1h//87ZP//OWb//zdp//81bP//M27/+Dl2/9Ik
        a//MG2n/wxtq/4wbV/+oHGL/zRpv14gZSDcAAAAB5HM+IfxhG9f/WSD/81w4/+piRP/dZUn/8nlm/9tz
        XP//l47//5GL//9hXv//U1X//1JY//9PW///TV3//0tg//9JZP//R2b//0Vp//9Da///QW7//z9x//89
        c//+QHj/1zBx/8IcZ/+tHGT/nBpd/5MdWv+8Gm7/vx1roDoSHQ7pcjsl/mEb3/deJf/ZWzT/82tK/9dl
        Rv/2g2//13Zf//6Zjf//hX3//2Fb//9fXP//XmH//1xj//9aZv//WGj//1Vq//9Ubf//U3H//1F0//9Q
        d///Tnn//0p6//9JfP/lP3n/uh9n/5obXf+oG2P/oRxi/5gbX/+/HHDOiB9HG+53PyL/Yx/b7GAr/9RZ
        MP/5clD/2WlK/+Z3WP/fe2H//5mN//97cP//a2H//Wpl/95eXf/mV1r/5lVc/99ZY//8YnP/8lZr/+1Q
        af/dTGb/3Uln/99PcP/7V4D//1SC//RQgv+4KGr/jBpX/6gbZf+sG2r/nhpl/7kdb9OeI1If8YBMH/5o
        JNj/Zi3/3l82/+1xTv/vfmD/4G1G//mQeP//lYb//3ts//93a//+dW7/9XJu/+xjY//sZWn/9W11//9t
        ev/pX2//2VJl/+pnfP/uYHr/8V99//5ihv//YYn//mCL/8Q4cf+THFv/pB1m/6Ubaf+lGWz/sx1u2aYh
        VCX0ilkc/mwr1f9rMf/sa0H/321I//+Ocf/9ln///56K//+PfP//g3L//4J1//+Bd///gHr/8m1r//Jz
        dP//fIH//3mC//54hP/qbHv/4F9y//x3jf//c47//2+O//9ukP//bpP/3FCA/54hYv+dH2X/nR1n/5wb
        av+qHWvdoB1QKu+PZBn8cDHS/3A3/+xuRP/bZjr//5Jz//+cg///nIf//5B7//+Pff//jn///4yA//+M
        g//ydnD/8nt5//+Iiv//hYr//4SM//+Dj//rdYT/5WV4//2Alv//fZb//3uY//96m//xapH/oipm/5Mf
        Y/+UHmb/kxxo/6EcaeKdGk4v7Jx4F/x1Oc//dT3/8HhN//CBWf/+l3j//5+F//+agv//mYP//5qI//+Z
        if//mIv//5eN//SBef/zg3///5OT//+Rk///kJb//4+Y//6Omv/tdIT/83SI//+Kn///iKD//4ei//6B
        of+3QHP/iyBg/40gZP+MHWb/nh1n5qYZUDXsn30V/HlAy/96Q///h1v//5Nu//+dff//oIX//5yC//+l
        j///pJL//6OT//2hlP/ghHn/5nFn//OLhf//n5z//52d//iUl//7lpz//5qi//R9i//odYX//pan//+U
        qP//k6r//5Os/9VfiP+GI17/hSFh/4QfZP+XHmbqpBpQO+uigRL8fkbI/4BL//+MYP//l3L//59+//+d
        f///pYv//7Cc//+unP//rZ3//qye//Wlmv/fioH/5pKL//+qpf//qKb/7JSU/9R2ef/Wdnz/1XV+//CV
        oP//oa///5+w//+fsf//n7T/8oCe/6U2af+LJWH/gB9h/4weYuyZGU1A7aiIEP2DTMX/hlL//5Nn//+c
        dv//oX///6OF//+jh///rpf//7em//+3p///tqj//7Wp//20qv/8sqr//7Kt//+xrv/+sa//+Kys//On
        qv/6rLH//621//+rtf//q7f//6m4//+Wq//+hJ//93+e/+hvlf/RV4f/vjp06qweUzr4uJsI/plsrP+h
        eP//qIT//6uJ//+rjP//qoz//6eK//+ihv//qpP//7yr//+/sf//vbH//72y//+8tP//u7X//7q1//+5
        t///ubj//7i5//+3uv//trv//7a9//+uuP/9kKH/+3+W//yGnv/+jqf//5av//+Xs//2b5afwg1GDfef
        dgD5qodA/quH5/+sif//qoj//KeF//6mhv//pYb//6KE//+dgf//o4r//7qq///Fuf//xLr//8O6///D
        u///wrz//8G9///Bv///v7///7/B//+/wv/9qbH/94KQ//Z3if/5fpP/+4Wb//2MpP/+kqv/+X6dyuJG
        cSLrVn4AzpR5AH92bAL2pYB7/qiC/P+ogv/wmnb/6Idf//2def//nn3//pp7//6Wef//mH3//7Kg///J
        vv//ysH//8nB///Iwv//x8P//8fE///Hxv//wcH/95ue/+10fP/scHz/83eH//h+kP/6hJj//Iuh//mD
        nejkWXpH/5e1AIQSLwAAAAAA////ALqBZhf2oHm4/6N7//ygeP/Zd0z/6IVd//+Zdf/zjWr/6n1X//6K
        af//imz//6GM///Fuf//zcX//8zF///Lxv//zMj/+7m2/+eGhP/VZGb/zWRp/9JrcP/jcHv/6neG//iD
        lf/6g5n54WV+eAsAAAUAAAAAAAAAAAAAAAAAAAABAAAABMiDY0T6m3Lk/5xx/+yLYf/kf1T//5Jp//uL
        ZP/aaz//6HVM//2AXv//elv//4ty//+3qf//zcX//8rD/+6lnf/Mb2X/w11Y/7pYV//PZmj/xWVp/85o
        b//acHv/94CQ/+VqfapgHSoZAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAQIC+ONZnn+lGX6+49g/9pz
        R//4hVb//4ZZ/+h1Sv/pckf//3lS//9zTv//bkz//3ZY//yejP/UjHv/ql5L/6xaSv+8X1j/wVxb/8Jg
        YP+9YWT/1G1z/+96hf/sb37NlDhEMgAAAAgAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEjmJNF/eP
        X678h1T/3nFB/99vP//zekv/93dI/91nOf/9ckX//21D//9oQv//Y0D/6mZH/5FYPP+TVj7/pVpI/7Vg
        VP++Y13/x2Zj/9dtbv/mdHn/7HF658tUXkwAAAAHAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAA7ZNpMP2IU8r9f0j593dA//h0Pv/2cDz/2F8w/+VlN//5Zzv//2M3//9fN//bYj//glY2/4xX
        PP+cWkT/rV5N/7xjV//LZ2D/2Wxp++VucN7kY2loJgAABQAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACjoZ0B7JVtG/WLW1D7gk2Q/3lCy/9xOPH7aTL/8WMu//diL///Xy3//10u/8xh
        OP96Vy//g1k1/5RcPf+pYEf9v2NS5NNkW6rgZ2Jg42FhIsZKTgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/8+8AP/r4wH/o34T/4tbPv99Rnv/cze6/2or5/9j
        Ivz/YR//u2cn/3thIP2OZyrpqWw0tcVvP2vgblEp/WpfBvFiVAD/f28AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/7+gA////AP+x
        jQ3/jls1/3xCdv9yM8HGcjTVp3Eyich9QzrzlF8LujsAAP/PrwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//wf///gA//wAAAPwAAAB8AAAAOAAAADgAAAA4AAAAPAAAADgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAADwAAAA4AA
        AAPAAAADwAAAA+gAAAf4AAA//wAB///wD/8=
</value>
  </data>
</root>
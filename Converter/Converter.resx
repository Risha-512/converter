<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AADRcp//0XKf/9Fyn/9RLD7/EAkM/xYMEf8WDBH/FgwR/xgNE/8YDRP/GA0T/xgNE/8YDRP/GA0T/xgN
        E/8YDRP/GA0T/xgNE/8YDRP/GA0T/xgNE/8YDRP/GA0T/xgNE/8YDRP/GA0T/xgNE/8YDRP/BQMD6QAA
        AOQAAADkAAAA/NFxnP/RcZz/0XGc/1EsPf+WUXD/0XGc/9FxnP/RcZz/532s/+d9rP/nfaz/532s/+d9
        rP/nfaz/532s/+d9rP/nfaz/532s/+d9rP/nfaz/532s/+d9rP/nfaz/532s/+d9rP/nfaz/532s/+d9
        rP/kgKowAAAAAAAAAAAAAADk0XCX/9Fwl//RcJf/USs7/5ZQbP/RcJf/0XCX/9Fwl//nfKf/53yn/+d8
        p//nfKf/53yn/+d8p//nfKf/53yn/+d8p//nfKf/53yn/+d8p//nfKf/53yn/+d8p//nfKf/53yn/+d8
        p//nfKf/53yn/+R6pTAAAAAAAAAAAAAAAOTRb5T/0W+U/9FvlP9RKzn/llBq/9FvlP/Rb5T/0W+U/+d7
        o//ne6P/53uj/+d7o//ne6P/53uj/+d7o//ne6P/53uj/+d7o//ne6P/53uj/+d7o//ne6P/53uj/+d7
        o//ne6P/53uj/+d7o//ne6P/5HqlMAAAAAAAAAAAAAAA5NFvj//Rb4//0W+P/1ErOP+WUGf/0W+P/9Fv
        j//Rb4//53qe/+d6nv/nep7/53qe/+d6nv/nep7/53qe/+d6nv/nep7/53qe/+d6nv/nep7/53qe/+d6
        nv/nep7/53qe/+d6nv/nep7/53qe/+d6nv/kep8wAAAAAAAAAAAAAADk0W6M/9FujP/Rboz/USs2/5ZP
        ZP/Rboz/0W6M/9FujP/neZr/53ma/+d5mv/neZr/53ma/+d5mv/neZr/53ma/+d5mv/neZr/53ma/+d5
        mv/neZr/53ma/+d5mv/neZr/53ma/+d5mv/neZr/53ma/+R6mjAAAAAAAAAAAAAAAOTRbYj/0W2I/9Ft
        iP9RKjX/lk5i/9FtiP/RbYj/0W2I/+d4lv/neJb/53iW/+d4lv/neJb/53iW/+d4lv/neJb/53iW/+d4
        lv/neJb/53iW/+d4lv/neJb/53iW/+d4lv/neJb/53iW/+d4lv/neJb/5HqVMAAAAAAAAAAAAAAA5NFs
        g//RbIP/0WyD/1EqM/+WTl7/0WyD/9Fsg//RbIP/53eR/+d3kf/nd5H/53eR/+d3kf/nd5H/53eR/+d3
        kf/nd5H/53eR/+d3kf/nd5H/53eR/+d3kf/nd5H/53eR/+d3kf/nd5H/53eR/+d3kf/kdY8wAAAAAAAA
        AAAAAADk0WuA/9FrgP/Ra4D/USoy/5ZNXP/Ra4D/0WuA/9FrgP/ndo3/53aN/+d2jf/mdoz/ZTM9/w0G
        CP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BgME/0glLP/Zb4X/53aN/+d2jf/ndo3/53aN/+R1
        jzAAAAAAAAAAAAAAAOTRanz/0Wp8/9FqfP9RKTD/lkxZ/9FqfP/Ranz/0Wp8/+d1if/ndYn/53WJ/5hN
        Wv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/2k1Pv/ndYn/53WJ/+d1
        if/ndYn/5HWKMAAAAAAAAAAAAAAA5NFpeP/RaXj/0Wl4/1EpL/+WS1b/0Wl4/9FpeP/RaXj/53SE/+d0
        hP/ndIT/bzc//wAAAP93PET/jEdQ/1gsMv9QKC7/jEZQ/3Y7Q/8uFxr/kUlT/49IUv8DAQL/PyAk/+d0
        hP/ndIT/53SE/+d0hP/kdYUwAAAAAAAAAAAAAADk0Wh0/9FodP/RaHT/USgt/5ZLU//RaHT/0Wh0/9Fo
        dP/nc4D/53OA/+dzgP9sNjz/AAAA/30+Rf8AAAD/gkBI/4FAR/8AAAD/fT5F/243Pf8PCAn/YzE3/x4P
        Ef89HiL/53OA/+dzgP/nc4D/53OA/+R1gDAAAAAAAAAAAAAAAOTRZ2//0Wdv/9Fnb/9RKCv/lkpQ/9Fn
        b//RZ2//0Wdv/+dye//ncnv/53J7/2w1Of8AAAD/Xy8z/3M5Pf8+HiH/Px8h/3Y6P/9fLzP/IhES/3o8
        Qf92Oj//AAAA/z0eIP/ncnv/53J7/+dye//ncnv/5HB6MAAAAAAAAAAAAAAA5NFmbP/RZmz/0WZs/1Eo
        Kv+WSU7/0WZs/9FmbP/RZmz/53F3/+dxd//ncXf/bDU4/wAAAP9WKiz/i0RH/zkcHf80GRv/ikNH/1Yq
        LP8bDQ7/hkJF/3I4O/8AAAD/PR4f/+dxd//ncXf/53F3/+dxd//kcHUwAAAAAAAAAAAAAADa0mVo/9Jl
        aP/SZWj/Uico/5dIS//SZWj/0mVo/9JlaP/ocHP/6HBz/+hwc/9sNDb/AAAA/4ZBQv8FAgL/h0FD/4RA
        Qf8FAgL/hkFC/2w0Nv8ZDAz/bDQ2/xwODv89HR7/6HBz/+hwc//ocHP/6HBz/+pwdTAAAAAAAAAAAAAA
        ABDSZWT/0mVk/9JlZP9SJyf/l0hI/9JlZP/SZWT/0mVk/+hvbv/ob27/6G9u/2w0M/8AAAD/eTo5/3Q3
        N/9YKir/WSsq/3Y5OP95Ojn/Nxsa/4A9Pf+MQ0L/BQIC/z0dHf/ob27/6G9u/+hvbv/ob27/6nBwMAAA
        AAAAAAAAAAAAM9JkYP/SZGD/0mRg/1InJf+XSEX/0mRg/9JkYP/SZGD/6G5q/+huav/obmr/bDMx/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/PR0c/+huav/obmr/6G5q/+hu
        av/qcGowAAAAAAAAAAAAAADi0mNc/9JjXP/SY1z/UiYk/5dHQv/SY1z/0mNc/9JjXP/obWb/6G1m/+ht
        Zv9sMzD/BwMD/1ImJP9eLCn/Xiwp/14sKf9eLCn/Xiwp/14sKf9eLCn/WSon/xUKCf89HRv/6G1m/+ht
        Zv/obWb/6G1m/+pwZTAAAAAAAAAAAAAAAN3SYlj/0mJY/9JiWP9SJiL/l0Y//9JiWP/SYlj/0mJY/+hs
        Yf/obGH/6Gxh/2wyLf9eLCf/6Gxh/+hsYf/obGH/6Gxh/+hsYf/obGH/w1tR/8NbUf/obGH/kkQ9/z0c
        Gf/obGH/6Gxh/+hsYf/obGH/6mpgMAAAAAAAAAAAAAAAENJhVP/SYVT/0mFU/1ImIf+XRjz/0mFU/9Jh
        VP/SYVT/6Gtd/+hrXf/oa13/bDIr/2wyK//oa13/6Gtd/+hrXf/oa13/6Gtd/95mWf9/OzP/fzsz/95m
        Wf+fSUD/PRwY/+hrXf/oa13/6Gtd/+hrXf/qamAwAAAAAAAAAAAAAABy0mBR/9JgUf/SYFH/UiUf/5dF
        Ov/SYFH/0mBR/9JgUf/oaln/6GpZ/+hqWf9sMSr/bDEq/+hqWf/oaln/6GpZ/+hqWf/oaln/2WNT/3s4
        L/97OC//2WNT/6JKPv89HBf/6GpZ/+hqWf/oaln/6GpZ/+pqWjAAAAAAAAAAAAAAAOTSX0z/0l9M/9Jf
        TP9SJR7/l0Q3/9JfTP/SX0z/0l9M/+hpVP/oaVT/6GlU/28yKP9sMSf/6GlU/+hpVP/oaVT/6GlU/+hp
        VP/kZ1P/jUAz/41AM//kZ1P/pUs8/0AdF//oaVT/6GlU/+hpVP/oaVT/6mpVMAAAAAAAAAAAAAAA5NJe
        SP/SXkj/0l5I/1IkHP+XQzT/0l5I/9JeSP/SXkj/6GhQ/+hoUP/oaFD/mUU1/zMXEv/OXEf/2WFL/9lh
        S//ZYUv/2WFL/9lhS//ZYUv/2WFL/9hhSv9gKyH/ai8k/+hoUP/oaFD/6GhQ/+hoUP/qalAwAAAAAAAA
        AAAAAADk0l1E/9JdRP/SXUT/UiQa/5dDMf/SXUT/0l1E/9JdRP/oZ0v/6GdL/+hnS//nZ0v/ZS0h/w0G
        BP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BgMC/0ggF//aYUf/6GdL/+hnS//oZ0v/6GdL/+pl
        SjAAAAAAAAAAAAAAAOTSXED/0lxA/9JcQP9SJBn/l0Iu/9JcQP/SXED/0lxA/+hmR//oZkf/6GZH/+hm
        R//oZkf/6GZH/+hmR//oZkf/6GZH/+hmR//oZkf/6GZH/+hmR//oZkf/6GZH/+hmR//oZkf/6GZH/+hm
        R//oZkf/6mVFMAAAAAAAAAAAAAAA5NJbPf/SWz3/0ls9/1IjGP+XQSz/0ls9/9JbPf/SWz3/6GVD/+hl
        Q//oZUP/6GVD/+hlQ//oZUP/6GVD/+hlQ//oZUP/6GVD/+hlQ//oZUP/6GVD/+hlQ//oZUP/6GVD/+hl
        Q//oZUP/6GVD/+hlQ//qZUUwAAAAAAAAAAAAAADk0ls4/9JbOP/SWzj/UiMW/5dBKP/SWzj/0ls4/9Jb
        OP/oZD7/6GQ+/+hkPv/oZD7/6GQ+/+hkPv/oZD7/6GQ+/+hkPv/oZD7/6GQ+/+hkPv/oZD7/6GQ+/+hk
        Pv/oZD7/6GQ+/+hkPv/oZD7/6GQ+/+plQDAAAAAAAAAAAAAAAOTSWjX/0lo1/9JaNf9SIxX/l0Em/9Ja
        Nf/SWjX/0lo1/+hjOv/oYzr/6GM6/+hjOv/oYzr/6GM6/+hjOv/oYzr/6GM6/+hjOv/oYzr/6GM6/+hj
        Ov/oYzr/6GM6/+hjOv/oYzr/6GM6/+hjOv/oYzr/6mU6MAAAAAAAAAAAAAAA5NNYMTTTWDE001gxNBkK
        BrBJHhBt01gxNNNYMTTTWDE06mA1MOpgNTDqYDUw6mA1MOpgNTDqYDUw6mA1MOpgNTDqYDUw6mA1MOpg
        NTDqYDUw6mA1MOpgNTDqYDUw6mA1MOpgNTDqYDUw6mA1MOpgNTDjVTkJAAAAAAAAAAAAAADkAAAAAAAA
        AAAAAAAAAAAAnAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AOQAAAAAAAAAAAAAAAAAAACcAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA5AAAAAAAAAAAAAAAAAAAAJwAAADrAAAA5AAAAOQAAADkAAAA5AAAAOQAAADkAAAA5AAA
        AOQAAADkAAAA5AAAAOQAAADkAAAA5AAAAOQAAADkAAAA5AAAAOQAAADkAAAA5AAAAOQAAADkAAAA5AAA
        AOQAAADkAAAA5AAAAOQAAAD8AAAAAAAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAA
        AAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAA
        AAYAAAAGAAAABgAAAAbn///+5////uAAAAA=
</value>
  </data>
</root>